/*
 * Master Gradle build script
 *
 * Depends on bndPlugin property set by settings.gradle.
 * and bnd_* values from gradle.properties.
 */

import aQute.bnd.build.Workspace
import aQute.bnd.osgi.Constants

/* Add bnd gradle plugin as a script dependency */
buildscript {
  dependencies {
    classpath bndPlugin
  }
}

/* Initialize the bnd workspace */
Workspace.setDriver(Constants.BNDDRIVER_GRADLE)
Workspace.addGestalt(Constants.GESTALT_BATCH, null)
ext.bndWorkspace = new Workspace(rootDir, bnd_cnf).setOffline(gradle.startParameter.offline)

ext.cnf = rootProject.project(bnd_cnf)

/* Configure the subprojects */
subprojects {
  def bndProject = bndWorkspace.getProject(name)
  if (bndProject != null) {
    plugins.apply 'biz.aQute.bnd'
  }
}

task wrapper(type: Wrapper) {
  jarFile = rootProject.file('.gradle-wrapper/gradle-wrapper.jar')
}

ext.download_url = "http://dianne.intec.ugent.be/"

task("datasets") {
	description "Download pre-configured datasets (all available by default)."
	group 'util'
	doLast {
		def ds = project.hasProperty('which') ? project.properties['which'] + "/" : ""
		def dir = project.properties['directory'] ?: "datasets/"
		
		logger.info "Downloading dataset(s) {} to directory {}", ds , dir
		
		directory(dir)
		download(download_url + "datasets/" + ds, dir)
	}
}

task("models") {
	description "Download neural network models (all available by default)."
	group 'util'
	doLast {
		def mod = project.hasProperty('which') ? project.properties['which'] + "/" : ""
		def dir = project.properties['directory'] ?: "models/"
		
		logger.info "Downloading model(s) {} to directory {}", mod , dir
		
		directory(dir)
		download(download_url + "models/" + mod, dir)
	}
}

def download(String[] args) {
	def url = args[0]
	def dir = args[1]

	exec {
		/* Could be better, but works for now */
		commandLine "wget", "-nv", "-r", "-np", "-nH", "--cut-dirs=1", "--reject=index.html*", "-P", dir, url
	}
}

def directory(String arg) {
	exec {
		commandLine "mkdir", "-p", arg
	}
}
